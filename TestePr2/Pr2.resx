<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        A//Z
</value>
  </data>
</root>